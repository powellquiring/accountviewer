(()=>{var e={};e.id=794,e.ids=[794],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},7705:(e,t,r)=>{"use strict";r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{patchFetch:()=>u,routeModule:()=>p,serverHooks:()=>m,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>d});var i=r(6559),n=r(8088),a=r(7719),o=r(9304),c=e([o]);o=(c.then?(await c)():c)[0];let p=new i.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/accounts/route",pathname:"/api/accounts",filename:"route",bundlePath:"app/api/accounts/route"},resolvedPagePath:"/Users/powellquiring/github.com/powellquiring/accountviewer/src/app/api/accounts/route.ts",nextConfigOutput:"",userland:o}),{workAsyncStorage:l,workUnitAsyncStorage:d,serverHooks:m}=p;function u(){return(0,a.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:d})}s()}catch(e){s(e)}})},7879:e=>{"use strict";e.exports=import("firebase-admin/firestore")},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},9304:(e,t,r)=>{"use strict";r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{GET:()=>c});var i=r(2190),n=r(9801),a=r(7879),o=e([n,a]);async function c(e){let{searchParams:t}=new URL(e.url),r=t.get("source");if("mock"===r)return i.NextResponse.json([{id:"mock-api-1",name:"Mock API Brokerage",securities:[{description:"Apple Inc.",quantity:10,symbol:"AAPL",unitcost:150},{description:"Microsoft Corp.",quantity:5,symbol:"MSFT",unitcost:280.5}]},{id:"mock-api-2",name:"Mock API Retirement",securities:[{description:"Tesla Inc.",quantity:2,symbol:"TSLA",unitcost:700}]},{id:"mock-api-3",name:"Mock API Custodial"}]);try{!function(){let e=(0,n.getApps)();if(e.length)return e[0];if(process.env.GOOGLE_APPLICATION_CREDENTIALS)try{return(0,n.initializeApp)({credential:(0,n.cert)(JSON.parse(process.env.GOOGLE_APPLICATION_CREDENTIALS))})}catch(e){return console.warn("Failed to parse GOOGLE_APPLICATION_CREDENTIALS as JSON, trying as path.",e),(0,n.initializeApp)({credential:(0,n.cert)(process.env.GOOGLE_APPLICATION_CREDENTIALS)})}let t=process.env.FIREBASE_CONFIG;if(t)try{let e=JSON.parse(t);return(0,n.initializeApp)({credential:(0,n.cert)(e)})}catch(e){console.warn("Failed to parse FIREBASE_CONFIG, attempting default initialization.",e)}(0,n.initializeApp)()}();let e=(0,a.getFirestore)(),t=(0,a.collection)(e,"users"),r=await (0,a.getDocs)(t);if(r.empty)return i.NextResponse.json([]);let s=[];return r.docs.forEach(e=>{let t=e.data();t.accounts&&Array.isArray(t.accounts)&&t.accounts.forEach(t=>{s.push({id:t.id||`${e.id}-${s.length}`,name:t.name||"N/A",securities:t.securities||[]})})}),i.NextResponse.json(s)}catch(e){if(console.error("Error fetching accounts from Firestore:",e),"unavailable"===e.code||"permission-denied"===e.code||"unimplemented"===e.code||"internal"===e.code)return console.warn(`Firebase Admin SDK error: ${e.message}. This might be due to Firestore not being enabled or misconfiguration.`),i.NextResponse.json({message:"Service temporarily unavailable or permission issue. Ensure Firestore is enabled and configured."},{status:503});return i.NextResponse.json({message:"Failed to fetch accounts",error:e.message},{status:500})}}[n,a]=o.then?(await o)():o,s()}catch(e){s(e)}})},9801:e=>{"use strict";e.exports=import("firebase-admin/app")}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,580],()=>r(7705));module.exports=s})();